
import type { Metadata } from "next";
import { Roboto,Space_Grotesk} from "next/font/google";
import "./globals.css";

import { ThemeProvider } from "@/components/provoider/themeprovoider";
import { Children } from "@/type";
import { languages } from "@/i18next/settings";
import {dir} from 'i18next'
import { ClerkProvider } from "@clerk/nextjs";

const roboto = Roboto({
  weight:['300','400','500','600','700','800','900',],
  variable:'--font-roboto-sans',
  subsets: ["latin"],
});

const spaceGrotesk = Space_Grotesk({
  weight:['500','600'],
  variable: "--font-spaceGrotesk-mono",
  subsets: ["latin"],
});
interface  Props extends  Children{
  params:{lng :string}
}
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export async function generateStaticParams() {
  return languages.map((lng) => ({ lng }))
}
export default function RootLayout({children,params: {lng}} :Props ) {
  
  return (
    <ClerkProvider>
      <html lang="en" dir={dir(lng)} suppressHydrationWarning>
      <body
        className={`${roboto.variable} ${spaceGrotesk.variable} antialiased`}
      >
         <ThemeProvider
            attribute="class"
            defaultTheme="system"
            enableSystem
            disableTransitionOnChange
          >
        {children}
        </ThemeProvider>
      </body>
    </html>
    </ClerkProvider>
  );
}
